<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='mac' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='sales2016Q1' inline='true' name='textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6' version='9.3'>
      <connection class='textscan' directory='/Users/Starshine/DSI/Week-3/Project-3' filename='sales2016Q1.csv' password='' server=''>
        <relation name='sales2016Q1.csv' table='[sales2016Q1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Store#' ordinal='1' />
            <column datatype='string' name='County' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='real' name='County#' ordinal='4' />
            <column datatype='real' name='Total_Sales_2016_Q1' ordinal='5' />
            <column datatype='real' name='Sales_Mean_2016_Q1' ordinal='6' />
            <column datatype='real' name='Total_Liters_2016_Q1' ordinal='7' />
            <column datatype='real' name='Avg_PPL_2016_Q1' ordinal='8' />
            <column datatype='integer' name='Zip_Code' ordinal='9' />
            <column datatype='real' name='Avg_Liters_2016_Q1' ordinal='10' />
            <column datatype='real' name='Avg_Margin_2016_Q1' ordinal='11' />
            <column datatype='real' name='Predicted 2016 TotalSales' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Store#]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>Store#</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County#</remote-name>
            <remote-type>5</remote-type>
            <local-name>[County#]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>County#</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Sales_2016_Q1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Sales_2016_Q1]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>Total_Sales_2016_Q1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales_Mean_2016_Q1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales_Mean_2016_Q1]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>Sales_Mean_2016_Q1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Liters_2016_Q1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Liters_2016_Q1]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>Total_Liters_2016_Q1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_PPL_2016_Q1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg_PPL_2016_Q1]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>Avg_PPL_2016_Q1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zip_Code]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>Zip_Code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Liters_2016_Q1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg_Liters_2016_Q1]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>Avg_Liters_2016_Q1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Margin_2016_Q1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg_Margin_2016_Q1]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>Avg_Margin_2016_Q1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Predicted 2016 TotalSales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Predicted 2016 TotalSales]</local-name>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias>Predicted 2016 TotalSales</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sales2016Q1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Liters 2016 Q1' datatype='real' name='[Avg_Liters_2016_Q1]' role='measure' type='quantitative' />
      <column caption='Avg Margin 2016 Q1' datatype='real' name='[Avg_Margin_2016_Q1]' role='measure' type='quantitative' />
      <column caption='Avg PPL 2016 Q1' datatype='real' name='[Avg_PPL_2016_Q1]' role='measure' type='quantitative' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Predicted 2016 TotalSales]' role='measure' type='quantitative' />
      <column caption='Sales Mean 2016 Q1' datatype='real' name='[Sales_Mean_2016_Q1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Store#]' role='dimension' type='ordinal' />
      <column caption='Total Liters 2016 Q1' datatype='real' name='[Total_Liters_2016_Q1]' role='measure' type='quantitative' />
      <column caption='Total Sales 2016 Q1' datatype='real' name='[Total_Sales_2016_Q1]' role='measure' type='quantitative' />
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[Zip_Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Store#]' derivation='None' name='[none:Store#:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Predicted 2016 TotalSales]' derivation='Sum' name='[sum:Predicted 2016 TotalSales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Sales_2016_Q1]' derivation='Sum' name='[sum:Total_Sales_2016_Q1:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.321499' measure-ordering='alphabetic' measure-percentage='0.678501' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Store#:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>3354</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>2633</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2512</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>5102</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>3773</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>3952</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>3420</bucket>
            </map>
            <map to='#d62728'>
              <bucket>3385</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2670</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>4829</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[sum:Predicted 2016 TotalSales:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[sum:Total_Sales_2016_Q1:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales2016Q1' name='textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6' />
          </datasources>
          <datasource-dependencies datasource='textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6'>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[Predicted 2016 TotalSales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Store#]' role='dimension' type='ordinal' />
            <column caption='Total Sales 2016 Q1' datatype='real' name='[Total_Sales_2016_Q1]' role='measure' type='quantitative' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[Zip_Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store#]' derivation='None' name='[none:Store#:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Zip_Code]' derivation='None' name='[none:Zip_Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Predicted 2016 TotalSales]' derivation='Sum' name='[sum:Predicted 2016 TotalSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Sales_2016_Q1]' derivation='Sum' name='[sum:Total_Sales_2016_Q1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[sum:Predicted 2016 TotalSales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[sum:Total_Sales_2016_Q1:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Total_Sales_2016_Q1])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Johnson&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Linn&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Polk&quot;' />
                  <groupfilter function='member' level='[none:County:nk]' member='&quot;Scott&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[none:Store#:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Total_Sales_2016_Q1])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Store#:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[none:Store#:ok]</column>
            <column>[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[none:County:nk]</column>
            <column>[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[Multiple Values]</rows>
        <cols>([textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[none:Zip_Code:ok] / [textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[:Measure Names]</field>
            <field>[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[none:County:nk]</field>
            <field>[textscan.1n6oiwn1e8jz6n1fkr8cr1g8uou6].[none:Zip_Code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      zhrKogPIyo/noYcfYWxWMo2OGQTGy5n+R83bUU2XZfgnR91dlkZa7L/2w6yFEF+cZgEwadqV
      vr9Hxqdw5733ffiPoXnEpw389cbrrwMgf9xUraryL2tBeS3VHZZh3+6MnHgJACGETAQTQgi9
      kgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgid
      kgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgid
      kgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgid
      kgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgidkgAQQgid
      kgAQQgidkgAQQgidGpEAcFr7OLB3N/sPHsHpUenraGLvvgPYPSoAXreTYxX7aO+0jER1hBBC
      MEIBMP9vv6ffG4y1+QQvzF9JfeU+/viHP7Bl9zEA6o7t4le//R8On2obieoIIYRghAIgODSA
      yhMnOVNdQ1BoOCgKecVj2VW+G4+qsmv3fjKzMkAZidoIIYQACNC8BK+DXosLNdgOLid2hwWv
      aiQltYSmYx/Q0trIqRYX4/NSBt7u9WK1Wn0fdzqdmldRCCH0SPMrAI+lnbPdKo98/QGe+OYT
      nD24B6vDgyEwmLLSVBYtWUVKwTiCz9VEVVUcDofvj9vt1rqKQgihS5oHgCEsgZRgD4sXL2HB
      vEWk5xcSYjKiApOnTOPQ3r1MmTrB936j0UhcXJzvT2hoqNZVFEIIXdK8C0gxBPHdZ/+DI0eO
      4zEUct+EcbjNnUTnGkhJiuTHP/4P8lLjSbzuaxjDR2ldHSGEEOdofw8ACA6LZvK0GR++EDOK
      8JiBvxYXFQKQmJo5ElURQghxjkwEE0IInZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEII
      nZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEII
      nZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEIInZIAEEII
      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
      zO9F/hwOB4qiUFNTA0BeXt5Fbetl1QWkqioHDhygpaWFq666ij//+c++FQr/FQLAH6qqsmvX
      LsxmM2VlZbzwwgu43W4iIyP/JQLAH6qqsm3bNgDGjBnDnDlzgIHRXZd6APirr6+PlStXcuON
      N3Lw4EHKy8tJTk6+6BO0tNDd3c3q1au59dZb2b59OwcPHiQjI4O8vDxNb45eDB0dHbz99tvc
      ddddbNiwgePHj5OXl0dOTo5mAwouxGU1EczpdLJp0yZmzpzJvn37KCgo4Lvf/S4bNmzQdJKH
      1+vlxIkTeL1eKioqWL58OSdPntR0Elh/fz87duxg2rRp7Ny5k4kTJ/L000+zZs0aTdvq8Xg4
      ceIEHo+Hffv2sXz5cqqqqjRta0dHBxUVFZSVlbF161auvvpqnnzySVavXq1Zuaqq0t3dTWNj
      o2843YYNGzSfuLNp0yZyc3OJjIzkgw8+4Ac/+AGRkZHnDZccTqqq0tHRQUtLC11dXaxZs4Z3
      3333vHHrw13m2rVrKS0txWg0sn//fp599llUVaWqqkrTcltaWujo6KC9vZ3Vq1ezefPm84aO
      D3eZK1asYPr06TgcDk6cOMGPfvQjent7aWpq0rTcxsZGuru7aW5uZtWqVWzbtm3I0PHLKgDs
      djsxMTFER0dz7NgxJk6cSHh4OEajUdOD4vbt26moqKCiooJ9+/ZRWFjI5s2bqa6u1qxMq9VK
      YmIiERERnDx5knHjxhEZGekbsqiVTZs2cfLkSXbv3s3x48cpLCxk7dq1Q4aWDbf+/n5SU1MJ
      Cwvj7NmzFBcXExMTg8fj0aytLpeLefPm4XA4mDdvnu9qY+HChZr+/+3p6aGgoIDa2loyMjII
      DQ0lKSkJi8WiWZk2m41XX30Vl8vF3LlzSUpK8t0o1bKtfX195OfnU11dTV5eHiaTicTExPMm
      wg2n/v5+Fi1ahNPp5JVXXiEtLQ1FUXwDCrQw2HWZm5vL6dOnffdbEhISNG1rV1cXS5YswWaz
      MX/+fDIzM7HZbKxatcrX1ssqAEJDQ+nt7WXz5s1YrVaSkpLYvXs3UVFRml5mdXZ2MnPmTNra
      2pg1axZFRUVMnTp1yKMth1tkZCTNzc1s3rwZRVGIjo5m+/btJCQkaDpMsauri5kzZ9LZ2cnV
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
